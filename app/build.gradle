/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.3.3/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'com.bmuschko.clover' version '2.2.3'
    id 'antlr'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.2'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:30.1.1-jre'
    clover 'org.openclover:clover:4.3.1'
    antlr "org.antlr:antlr4:4.5"
}

application {
    // Define the main class for the application.
    mainClass = 'edu.duke.proj.Evaluation'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

test {
  testLogging {
     showStandardStreams = true
     exceptionFormat = 'full'
  }
}


// generate java from the ANTLR g4 files
generateGrammarSource {
    arguments = ['-visitor', '-package', 'edu.duke.proj']
    outputDirectory = file("${project.buildDir}/generated-src/main/java/")
}

// copy the java code generated by ANTLR into a folder outside the build directory
// for the benefit of IntelliJ IDEA - make sure gen/main/java is marked as a generated
// sources folder
generateGrammarSource  {
    doLast {
        copy {
            from "${project.buildDir}/generated-src/main/java/"
            into "src/generated/java"
        }
    }
}

// make sure that ANTLR generates java before compiling the project
// include the generated java code in the compilation
compileJava.dependsOn generateGrammarSource
compileJava {
    source = ['build/generated-src/main/java', 'src/main/java']
}

// when cleaning, remove the generated sources too
task removeGeneratedSource(type: Delete) {
    delete 'src/generated/'
}
clean.dependsOn removeGeneratedSource

// mark the generated source as such for IntelliJ IDEA
sourceSets.main.java.srcDirs += file("src/generated/java")
